// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Event types, Events, Attendees, Users, Companies
model User {
  id        Int      @id @default(autoincrement())
  name      String?
  email     String?  @unique
  password  String?  @unique
  username  String?  @unique
  createdAt DateTime? @default(now()) @map(name: "created_at")
  updatedAt DateTime? @updatedAt @map(name: "updated_at")
  event   Event[]
  @@map(name: "users")
}

model EventType {
  id        Int      @id @default(autoincrement())
  type      String?
  event     Event?
  @@map(name: "eventType")
}

model Event {
  id        Int      @id @default(autoincrement())
  title     String?
  description String?
  startTime DateTime?
  endTime   DateTime?
  duration  DateTime?
  eventType EventType? @relation(fields: [eventTypeId], references: [id])
  eventTypeId Int
  owner     User?    @relation(fields: [userId], references: [id])
  userId    Int
  attendees Attendees[]
  companies Companies[]
  status    Status   @default(UPCOMING)
  createdAt DateTime? @default(now()) @map(name: "created_at")
  updatedAt DateTime? @updatedAt @map(name: "updated_at")
  @@map(name: "event")
  @@index([userId], name: "userId")
}

model Attendees {
  id  Int @id @default(autoincrement())
  name String?
  email String?
  event Event? @relation(fields: [eventId], references: [id])
  eventId Int?
  @@map("attendees")
  @@index([eventId], name: "eventId")
}

model Companies {
  id  Int @id @default(autoincrement())
  name String?
  address String?
  event Event? @relation(fields: [eventId], references: [id])
  eventId Int?
  @@map("companies")
}

enum Status {
  UPCOMING
  CANCELLED
}